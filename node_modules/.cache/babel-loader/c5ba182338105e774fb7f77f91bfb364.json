{"ast":null,"code":"var _jsxFileName = \"E:\\\\Ahmed\\\\web\\\\github\\\\Order_Food\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = nameInputRef.current.value;\n    const enteredPostalCode = nameInputRef.current.value;\n    const enteredCity = nameInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPostalIsValid = isFiveChars(enteredPostalCode);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCode;\n    if (!formIsValid) return;\n    props.onConfirm({\n      name: enteredName,\n      street: enteredStreet,\n      postalCode: enteredPostalCode,\n      city: enteredCity\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !formInputValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.postalCode ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"jP/bXZISlfxsXcx1ScSP2m/NYJA=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputValidity","setFormInputValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalIsValid","formIsValid","onConfirm","form","control","invalid","actions","onCancel","submit"],"sources":["E:/Ahmed/web/github/Order_Food/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\r\nimport { useRef,useState } from 'react';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChars = value => value.trim().length === 5\r\nconst Checkout = (props) => {\r\n    const [formInputValidity, setFormInputValidity] = useState({\r\n        name:true,\r\n        street:true,\r\n        city:true,\r\n        postalCode:true,\r\n    })\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = nameInputRef.current.value;\r\n    const enteredPostalCode = nameInputRef.current.value;\r\n    const enteredCity = nameInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName)\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet)\r\n    const enteredCityIsValid = !isEmpty(enteredCity)\r\n    const enteredPostalIsValid = isFiveChars(enteredPostalCode)\r\n\r\n    setFormInputValidity({\r\n        name: enteredNameIsValid,\r\n        street: enteredStreetIsValid,\r\n        city: enteredCityIsValid,\r\n        postalCode: enteredPostalIsValid\r\n    })\r\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCode\r\n\r\n    if(!formIsValid)\r\n    return\r\n\r\n    props.onConfirm({\r\n        name: enteredName,\r\n        street: enteredStreet,\r\n        postalCode: enteredPostalCode,\r\n        city: enteredCity\r\n    });\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${formInputValidity.name? '':classes.invalid}`}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name' ref={nameInputRef}/>\r\n        {!formInputValidity.name && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.street? '':classes.invalid}`}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef}/>\r\n        {!formInputValidity.street && <p>Please enter a valid street</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.postalCode? '':classes.invalid}`}>\r\n        <label htmlFor='postal'>Postal Code</label>\r\n        <input type='text' id='postal' ref={postalCodeInputRef }/>\r\n        {!formInputValidity.postalCode && <p>Please enter a valid postal code (5 characters long)</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.city? '':classes.invalid}`}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef}/>\r\n        {!formInputValidity.city && <p>Please enter a valid city</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module"}